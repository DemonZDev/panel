
<%- include('../components/template') %>
<br>
<style>
  .select-all-checkbox {
      display: flex;
      align-items: center;
      padding: 0.5rem;
      background-color: rgba(255, 255, 255, 0.05);
      border-radius: 0.5rem;
      margin-right: 1rem;
  }

  .file-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 1rem;
    }
  
  .select-all-checkbox input[type="checkbox"] {
      margin-right: 0.5rem;
  }
  
  .select-all-label {
      color: rgba(255, 255, 255, 0.7);
      font-size: 0.875rem;
      user-select: none;
  }
  /* Existing styles */
  @media (max-width: 640px) {
      .file-manager-header {
          flex-direction: column;
          align-items: stretch;
      }
      .file-manager-title {
          margin-bottom: 1rem;
      }
      .file-manager-actions {
          display: flex;
          flex-wrap: wrap;
          gap: 0.5rem;
      }
      .file-manager-actions button {
          flex: 1;
          white-space: nowrap;
      }
      .breadcrumb {
          flex-wrap: wrap;
      }
      .file-list-item {
          flex-wrap: wrap;
          padding: 0.5rem;
      }
      .file-info {
          width: 100%;
          margin-top: 0.5rem;
          justify-content: space-between;
      }
      .drop-zone {
          padding: 1rem;
      }
  }
  .modal-overlay {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(0, 0, 0, 0.5);
      display: flex;
      align-items: center;
      justify-content: center;
      opacity: 0;
      visibility: hidden;
      transition: opacity 0.3s ease, visibility 0.3s ease;
  }
  .modal-content {
      background-color: #1a1c20;
      padding: 2rem;
      border-radius: 0.5rem;
      max-width: 90%;
      max-height: 90%;
      overflow: auto;
      transform: scale(0.9);
      opacity: 0;
      transition: transform 0.3s ease, opacity 0.3s ease;
  }
  .modal-overlay.active {
      opacity: 1;
      visibility: visible;
  }
  .modal-overlay.active .modal-content {
      transform: scale(1);
      opacity: 1;
  }
  
  /* New styles for smoother transitions and better UX */
  .file-list-item {
      transition: background-color 0.2s ease, transform 0.2s ease;
  }
  .file-list-item:hover {
      transform: translateY(-2px);
  }
  .file-list-item:active {
      transform: translateY(0);
  }
  .action-button {
      transition: background-color 0.2s ease, transform 0.2s ease;
  }
  .action-button:hover {
      transform: translateY(-2px);
  }
  .action-button:active {
      transform: translateY(0);
  }
  .loading-overlay {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(0, 0, 0, 0.5);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 9999;
      opacity: 0;
      visibility: hidden;
      transition: opacity 0.3s ease, visibility 0.3s ease;
  }
  .loading-overlay.active {
      opacity: 1;
      visibility: visible;
  }
  .spinner {
      border: 4px solid rgba(255, 255, 255, 0.3);
      border-radius: 50%;
      border-top: 4px solid #ffffff;
      width: 40px;
      height: 40px;
      animation: spin 1s linear infinite;
  }
  @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
  }
 
  .file-card {
      background-color: rgba(255, 255, 255, 0.1);
      border-radius: 0.5rem;
      padding: 1rem;
      display: flex;
      flex-direction: column;
      align-items: center;
      text-align: center;
      transition: background-color 0.2s ease, transform 0.2s ease;
  }
  .file-card .context-menu-button {
      opacity: 0;
      transition: opacity 0.2s ease-in-out;
  }
  .file-card:hover .context-menu-button {
      opacity: 1;
  }
  #mass-actions-bar {
      transition: all 0.3s ease-in-out;
  }
  .file-card input[type="checkbox"] {
      opacity: 0;
      transition: opacity 0.2s ease-in-out;
  }
  .file-card:hover input[type="checkbox"],
  .file-card input[type="checkbox"]:checked {
      opacity: 1;
  }
  .file-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); /* Auto adjust columns based on screen width */
    gap: 1rem; /* Space between items */
    padding: 1rem; /* Optional: Add padding around the grid container */
}

.file-grid > a, .file-grid > button {
    display: flex;
    flex-direction: row; /* Arrange icon, name, and size horizontally */
    align-items: center; /* Vertically center the items in the row */
    justify-content: space-between; /* Spread items across the row */
    text-align: left; /* Left align text */
    padding: 1rem; /* Padding inside each file/directory item */
    background-color: rgba(255, 255, 255, 0.05); /* Background color for items */
    border: 1px solid rgba(255, 255, 255, 0.1); /* Border for items */
    border-radius: 8px; /* Rounded corners for items */
    transition: background-color 0.3s ease, transform 0.3s ease; /* Smooth transition on hover */
}

.file-grid > a:hover, .file-grid > button:hover {
    background-color: rgba(255, 255, 255, 0.1); /* Change background on hover */
    transform: scale(1.05); /* Slightly scale the item on hover */
}

.file-icon {
    margin-right: 0.75rem; /* Space between the icon and the name */
}

.file-name {
    font-size: 1rem;
    font-weight: 500;
    color: white;
    white-space: nowrap; /* Prevent text from wrapping */
    overflow: hidden;
    text-overflow: ellipsis; /* Add ellipsis if text overflows */
}

.file-size {
    font-size: 0.875rem; /* Smaller font size for file size */
    color: rgba(255, 255, 255, 0.7); /* Lighter color for the file size */
    min-width: 100px; /* Ensure space for file size, preventing items from becoming too squished */
}

  .toast {
      position: fixed;
      bottom: 1rem;
      right: 1rem;
      background-color: #4CAF50;
      color: white;
      padding: 1rem;
      border-radius: 0.5rem;
      opacity: 0;
      transition: opacity 0.3s ease;
      z-index: 9999;
  }
  .toast.show {
      opacity: 1;
  }
  .context-menu {
  position: fixed;
  background-color: #05050e;
  border: 1px solid #0d0d22;
  border-radius: 4px;
  padding: 5px 0;
  min-width: 150px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  z-index: 9999;
} 

.context-menu-item {
  padding: 8px 12px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.context-menu-item:hover {
  background-color: #2c2e33;
}

.file-icon-small {
    width: 16px;
    height: 16px;
    color: white;
    display: none;
} 
</style>
<main id="content">
  
   <%
      function formatLastUpdated(dateString) {
         const date = new Date(dateString);
         const now = new Date();
         const diffTime = Math.abs(now - date);
         const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
      
         if (diffDays > 30) {
           return date.toLocaleString('en-US', { 
             year: 'numeric', 
             month: 'short', 
             day: 'numeric', 
             hour: 'numeric', 
             minute: '2-digit', 
             hour12: true 
           });
         } else {
           return `${diffDays} day${diffDays !== 1 ? 's' : ''} ago`;
         }
       }
       %>
   <%
      function getFileIcon(purpose) {
        const icons = {
          programming: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5 mb-0.5 inline-flex mr-1.5">
           <path fill-rule="evenodd" d="M4.25 2A2.25 2.25 0 0 0 2 4.25v11.5A2.25 2.25 0 0 0 4.25 18h11.5A2.25 2.25 0 0 0 18 15.75V4.25A2.25 2.25 0 0 0 15.75 2H4.25Zm4.03 6.28a.75.75 0 0 0-1.06-1.06L4.97 9.47a.75.75 0 0 0 0 1.06l2.25 2.25a.75.75 0 0 0 1.06-1.06L6.56 10l1.72-1.72Zm4.5-1.06a.75.75 0 1 0-1.06 1.06L13.44 10l-1.72 1.72a.75.75 0 1 0 1.06 1.06l2.25-2.25a.75.75 0 0 0 0-1.06l-2.25-2.25Z" clip-rule="evenodd" />
         </svg>
         `,
         webDevelopment: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5 mb-0.5 inline-flex mr-1.5">
          <path fill-rule="evenodd" d="M4.25 2A2.25 2.25 0 0 0 2 4.25v11.5A2.25 2.25 0 0 0 4.25 18h11.5A2.25 2.25 0 0 0 18 15.75V4.25A2.25 2.25 0 0 0 15.75 2H4.25Zm4.03 6.28a.75.75 0 0 0-1.06-1.06L4.97 9.47a.75.75 0 0 0 0 1.06l2.25 2.25a.75.75 0 0 0 1.06-1.06L6.56 10l1.72-1.72Zm4.5-1.06a.75.75 0 1 0-1.06 1.06L13.44 10l-1.72 1.72a.75.75 0 1 0 1.06 1.06l2.25-2.25a.75.75 0 0 0 0-1.06l-2.25-2.25Z" clip-rule="evenodd" />
        </svg>
        `,
         database: `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 mb-0.5 inline-flex mr-1.5">
          <path stroke-linecap="round" stroke-linejoin="round" d="M20.25 6.375c0 2.278-3.694 4.125-8.25 4.125S3.75 8.653 3.75 6.375m16.5 0c0-2.278-3.694-4.125-8.25-4.125S3.75 4.097 3.75 6.375m16.5 0v11.25c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125V6.375m16.5 0v3.75m-16.5-3.75v3.75m16.5 0v3.75C20.25 16.153 16.556 18 12 18s-8.25-1.847-8.25-4.125v-3.75m16.5 0c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125" />
        </svg>
        `,
         folder: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5 mb-0.5 inline-flex mr-1.5"><path d="M3.75 3A1.75 1.75 0 002 4.75v3.26a3.235 3.235 0 011.75-.51h12.5c.644 0 1.245.188 1.75.51V6.75A1.75 1.75 0 0016.25 5h-4.836a.25.25 0 01-.177-.073L9.823 3.513A1.75 1.75 0 008.586 3H3.75zM3.75 9A1.75 1.75 0 002 10.75v4.5c0 .966.784 1.75 1.75 1.75h12.5A1.75 1.75 0 0018 15.25v-4.5A1.75 1.75 0 0016.25 9H3.75z" /></svg>`,
          other: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5 mb-0.5 inline-flex mr-1.5"><path fill-rule="evenodd" d="M4.5 2A1.5 1.5 0 003 3.5v13A1.5 1.5 0 004.5 18h11a1.5 1.5 0 001.5-1.5V7.621a1.5 1.5 0 00-.44-1.06l-4.12-4.122A1.5 1.5 0 0011.378 2H4.5zm2.25 8.5a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5zm0 3a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5z" clip-rule="evenodd" /></svg>`,
         
        };
      
        return icons[purpose] || icons.other;
      }
      %>
      <style>
        .select-all-checkbox {
        display: flex;
        align-items: center;
        padding: 0.5rem;
        background-color: rgba(255, 255, 255, 0.05);
        border-radius: 0.5rem;
        margin-right: 1rem;
    }
    
    .select-all-checkbox input[type="checkbox"] {
        margin-right: 0.5rem;
    }
    
    .select-all-label {
        color: rgba(255, 255, 255, 0.7);
        font-size: 0.875rem;
        user-select: none;
    }

    .toast {
        position: fixed;
        bottom: 1rem;
        right: 1rem;
        background-color: #4CAF50;
        color: white;
        padding: 1rem;
        border-radius: 0.5rem;
        opacity: 0;
        transition: opacity 0.3s ease;
        z-index: 9999;
    }
    .toast.show {
        opacity: 1;
    }
      </style>

    <%- include('../components/instance') %>
    <div class="bg-white/5 rounded-xl p-6 mb-6">
      <div class="flex flex-grow-0 items-center text-sm text-neutral-500 overflow-x-hidden">
     
      </div>
      
      
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-xl font-semibold text-center">Plugins</h2>
            <div class="flex items-center space-x-2">
              <br>
           
   
    <!--div class="flex items-center space-x-2">
        <select 
            id="sort-by" 
            class=" bg-black/20 rounded-lg border border-transparent py-2 px-4 text-white focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-200"
        >
            <option value="name">Name</option>
            <option value="size">Size</option>
            <option value="date">Last Updated</option>
            <option>&nbsp;</option>
        </select>
        
    </div-->
</div>
           
            
        </div>
       
        <div class="px-4 sm:px-6 lg:px-8">
            <!-- Search Bar -->
            <div class="mb-5">
              <input 
                type="text" 
                id="searchBar" 
                placeholder="Search for plugins..." 
                class="flex-grow p-2 w-full bg-white/10 border border-white/10 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-white rounded-lg placeholder-gray-400"
                oninput="filterPlugins()"
              />
            </div>
          
            <!-- Plugin List -->
            <dl id="pluginlist" class="mt-5 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3">
              <!-- Plugins will be added here by JavaScript -->
            </dl>
          </div>
         <div id="modal"></div>
         <div id="pluginInstall" class="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center opacity-0 pointer-events-none transition-opacity duration-300">
          <div class="bg-white rounded-xl p-8 max-w-md w-full transform scale-95 transition-transform duration-300">
              <h2 class="text-2xl font-medium mb-1 text-neutral-800">Install Plugin</h2>
              <p class="mb-6 text-neutral-600">Please choose a version for this plugin.</p>
              <div class="flex justify-end space-x-4">
                  <!-- Minecraft versions dropdown -->
                  <select id="minecraftVersion" class="text-black w-full px-3 py-2 border border-neutral-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-neutral-500 focus:border-neutral-500 transition mb-4">
                    <option value="1.7">1.7.0</option>
                    <option value="1.7.1">1.7.1</option>
                    <option value="1.7.2">1.7.2</option>
                    <option value="1.7.3">1.7.3</option>
                    <option value="1.7.4">1.7.4</option>
                    <option value="1.7.5">1.7.5</option>
                    <option value="1.7.6">1.7.6</option>
                    <option value="1.7.7">1.7.7</option>
                    <option value="1.7.8">1.7.8</option>
                    <option value="1.7.9">1.7.9</option>
                    <option value="1.8">1.8.0</option>
                    <option value="1.8.1">1.8.1</option>
                    <option value="1.8.2">1.8.2</option>
                    <option value="1.8.3">1.8.3</option>
                    <option value="1.8.4">1.8.4</option>
                    <option value="1.8.5">1.8.5</option>
                    <option value="1.9">1.9.0</option>
                    <option value="1.9.1">1.9.1</option>
                    <option value="1.9.2">1.9.2</option>
                    <option value="1.9.3">1.9.3</option>
                    <option value="1.9.4">1.9.4</option>
                    <option value="1.10">1.10.0</option>
                    <option value="1.10.1">1.10.1</option>
                    <option value="1.10.2">1.10.2</option>
                    <option value="1.11">1.11.0</option>
                    <option value="1.11.1">1.11.1</option>
                    <option value="1.11.2">1.11.2</option>
                    <option value="1.12">1.12.0</option>
                    <option value="1.12.1">1.12.1</option>
                    <option value="1.12.2">1.12.2</option>
                    <option value="1.13">1.13.0</option>
                    <option value="1.13.1">1.13.1</option>
                    <option value="1.13.2">1.13.2</option>
                    <option value="1.14">1.14.0</option>
                    <option value="1.14.1">1.14.1</option>
                    <option value="1.14.2">1.14.2</option>
                    <option value="1.15">1.15.0</option>
                    <option value="1.15.1">1.15.1</option>
                    <option value="1.15.2">1.15.2</option>
                    <option value="1.16">1.16.0</option>
                    <option value="1.16.1">1.16.1</option>
                    <option value="1.16.2">1.16.2</option>
                    <option value="1.16.3">1.16.3</option>
                    <option value="1.16.4">1.16.4</option>
                    <option value="1.16.5">1.16.5</option>
                    <option value="1.17">1.17.0</option>
                    <option value="1.17.1">1.17.1</option>
                    <option value="1.18.0">1.18.0</option>
                    <option value="1.18.1">1.18.1</option>
                    <option value="1.19.0">1.19.0</option>
                    <option value="1.19.1">1.19.1</option>
                    <option value="1.19.2">1.19.2</option>
                    <option value="1.19.3">1.19.3</option>
                    <option value="1.20">1.20.0</option>
                    <option value="1.20.1">1.20.1</option>
                    <option value="1.20.2">1.20.2</option>
                    <option value="1.20.3">1.20.3</option>
                    <option value="1.21.5">1.21.5</option>
                    <option value="1.21.6">1.21.6</option>
                    <option value="1.22">1.22.0</option>
                  </select>
                  <select class="hidden">
                    <option id="pluginId" value="${id}"></option>
                  </select>
                  <button onclick="redirectUrlPlugin(document.getElementById('pluginId').value, document.getElementById('minecraftVersion').value)" class="px-5 py-2 bg-neutral-800 text-white rounded-xl hover:bg-neutral-700 transition">Install</button>
              </div>
          </div>
      </div>
      <script>
        // Function to open the modal
function installPlugin(event, id) {
    // Prevent any default action (e.g., form submission or redirect)
    event.preventDefault();
    
    const modal = document.getElementById('pluginInstall');
    
    // Optionally, you can store the plugin ID for further usage, if needed
    const pluginIdInput = document.getElementById('pluginId');
    if (pluginIdInput) {
        pluginIdInput.value = id;
    }
     // Make the modal visible
     modal.classList.remove('opacity-0', 'pointer-events-none');
    modal.classList.add('opacity-100', 'pointer-events-auto');
    
}

// Function to close the modal
function closeModal() {
    const modal = document.getElementById('pluginInstall');
    modal.classList.add('opacity-0', 'pointer-events-none');
    modal.classList.remove('opacity-100', 'pointer-events-auto');
}

// Function to handle redirection with the selected Minecraft version
function redirectUrlPlugin(id, version) {
    // The URL format as requested
    const pluginId = id;
    const redirectUrl = `/instance/<%= req.params.id %>/plugins/download/${pluginId}/${version}`;
    
    // Redirect to the plugin download page
    window.location.href = redirectUrl;
}

      </script>
          <script>
            let allPlugins = [];  // Array to store all plugins
          
            async function addPlugins() {
              const pluginListContainer = document.getElementById('pluginlist');
          
              if (!pluginListContainer) {
                console.error("Element with id 'pluginlist' not found.");
                return;
              }
          
              try {
                // Fetch all plugins from the API
                const pluginsResponse = await fetch('/api/plugins');
                allPlugins = await pluginsResponse.json();  // Save the fetched plugins globally
          
                // Initially display all plugins
                displayPlugins(allPlugins);
              } catch (error) {
                console.error("Error fetching plugins:", error);
              }
            }
          
            // Function to display plugins (async because we use await inside)
            async function displayPlugins(plugins) {
              const pluginListContainer = document.getElementById('pluginlist');
              pluginListContainer.innerHTML = '';  // Clear the existing plugins
          
              for (const plugin of plugins) {
                try {
                  // Fetch plugin details by ID
                  const pluginDetailsResponse = await fetch(`/api/plugin/info/${plugin.id}`);
                  const pluginDetails = await pluginDetailsResponse.json();
          
                  // Destructure the required fields
                  const { id, name, link, description, logo } = pluginDetails;
          
                  // Create a new <a> element for the plugin
                  const pluginElement = document.createElement('a');
                  pluginElement.id = `${id}_plugin`;
                  pluginElement.href = link;
                  pluginElement.className = "p-3 hover:bg-[#1c1b1b] hover:scale-105 transition shadow-xl border border-white/5 rounded-lg overflow-hidden sm:p-3 lg:p-5 w-full";
          
                  // Set inner HTML for the plugin element
                  pluginElement.innerHTML = `
                    <div class="lg:flex lg:items-center lg:justify-between">
                      <div class="min-w-0 flex-1">
                        <h2 class="text-md font-medium text-white tracking-tight">
                          <img src="${logo}" alt="${name} Logo" class="invert inline-block w-6 h-6 mr-2">${name}
                        </h2>
                        <p class="text-sm text-gray-300 mt-1 break-words">${description}</p>
                        
                        <!-- Buttons -->
                        <div class="mt-4 flex space-x-4">
                          <!-- Download button -->
                          <button onclick="installPlugin(event, '${id}')" class="px-5 py-2 bg-gray-100 text-black rounded-xl hover:bg-gray-300 transition">Download</button>
          
                          <!-- Plugin link button -->
                          <a href="${link}" class="px-5 py-2 bg-gray-100 text-black rounded-xl hover:bg-gray-300 transition" target="_blank">Visit Plugin</a>
                        </div>
                      </div>
                    </div>
                  `;
          
                  // Append the plugin element to the container
                  pluginListContainer.appendChild(pluginElement);
                } catch (error) {
                  console.error(`Error fetching details for plugin ID ${plugin.id}:`, error);
                }
              }
            }
          
            // Function to filter plugins based on search input
            function filterPlugins() {
              const searchQuery = document.getElementById('searchBar').value.toLowerCase();
              const filteredPlugins = allPlugins.filter(plugin => {
                return plugin.name.toLowerCase().includes(searchQuery);  // Match name with search query
              });
          
              // Display the filtered plugins
              displayPlugins(filteredPlugins);
            }
          
            // Call the function to load plugins
            addPlugins();
          </script>
          
          
<div id="installModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center opacity-0 pointer-events-none transition-opacity duration-300">
  <div class="bg-white shadow-lg rounded-xl p-8 max-w-md w-full transform scale-95 transition-transform duration-300">
    <h2 class="text-2xl font-medium mb-4 text-neutral-800">Installing Plugin(s)</h2>
    <div class="mb-4">
      <!-- Progress Bar -->
      <div class="w-full bg-neutral-200 rounded-full h-2.5">
        <div id="installProgress" class="bg-black h-2.5 rounded-full" style="width: 0%;"></div>
      </div>
    </div>
    <p id="installStatus" class="text-center text-neutral-600">Preparing install...</p>
  </div>
</div>

  <!-- Loading Overlay -->
<div id="loading-overlay" class="loading-overlay">
  <div class="spinner"></div>
</div>
<div id="toast" class="toast">
  Operation completed successfully
</div>
</main>
  
   <script>
      const protocol = window.location.protocol === 'https:' ? 'wss' : 'ws';
      const instanceId = '<%= req.params.id %>';


      function formatBytes(bytes, decimals = 2) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const dm = decimals < 0 ? 0 : decimals;
            const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
        }

      const statsWs = new WebSocket(`${protocol}://${window.location.hostname}:${window.location.port}/stats/${instanceId}`);

      statsWs.onmessage = event => {
        const stats = JSON.parse(event.data);
            if (stats.error) {
                console.error('Error fetching stats:', stats.error);
                return;
            }

            const diskUsageRaw = parseFloat(stats.volumeSize);
            const diskLimitRaw = 10 * 1024; // Assuming 10GB limit
            const diskUsagePercent = (diskUsageRaw / diskLimitRaw * 100).toFixed(2);
            document.getElementById('diskUsage').textContent = `${formatBytes(diskUsageRaw * 1024 * 1024)} / ${formatBytes(diskLimitRaw * 1024 * 1024)} (${diskUsagePercent}%)`;
        
      }
    
   </script>
</main>
<%- include('../components/footer') %>
